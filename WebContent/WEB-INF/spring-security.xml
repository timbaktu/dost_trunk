<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
 	http://www.springframework.org/schema/task 
 	http://www.springframework.org/schema/task/spring-task-3.0.xsd
 	http://www.springframework.org/schema/security
 	http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!-- 
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/welcome*" access="ROLE_USER" />
		<form-login login-page="/login" default-target-url="/welcome" authentication-failure-url="/loginfailed" 
				username-parameter="username" password-parameter="password"/>
		<logout logout-success-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password from USER where USERNAME=?"
				authorities-by-username-query="select u.username, ur.authority from user u, user_roles ur where u.userid = ur.userid and u.username =?" />
		</authentication-provider>
	</authentication-manager>
-->
    <!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true" authentication-manager-ref="authMgr">
		<intercept-url pattern="/index/**" access="permitAll" />
		<intercept-url pattern="/login/**" access="permitAll" />
		<intercept-url pattern="/forums/show/**" access="permitAll" />
		<intercept-url pattern="/signup**" access="permitAll"/>
 		<intercept-url pattern="/conversations**" access="isAuthenticated()" /> 
 		<intercept-url pattern="/talkToFriend" access="isAuthenticated()" /> 
		<logout logout-success-url="/login?logout"  />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/user/welcome" 
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<!-- enable csrf protection -->
		<intercept-url pattern="/user/**" access="isAuthenticated()" />
		<intercept-url pattern="/counselor/**" access="isAuthenticated()" />
		
		<!-- Code for blocking user and checking who all are logged in right now -->
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
		<session-management session-authentication-strategy-ref="sas" />
	</http>
	
	<!-- Select users and user_roles from database -->
	<authentication-manager id="authMgr">
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query=
					"select username,password, enabled from user where username=?"
				authorities-by-username-query=
					"select username, role from user_roles where username =?  " />
		</authentication-provider>
	</authentication-manager>
	
	<!-- Scheduled Task Entries Start 

	<beans:bean id="chatFeedbackTask" class="com.dost.quartz.ChatFeedbackTask" />	
	<beans:bean id="incompleteChatTask" class="com.dost.quartz.IncompleteChatTask" />	
	<beans:bean id="mobileUsageTask" class="com.dost.quartz.MobileUsageTask" />	
	<beans:bean id="newDiscussionTask" class="com.dost.quartz.NewDiscussionTask" />	
	<beans:bean id="newPostOnYourDiscussionTask" class="com.dost.quartz.NewPostOnYourDiscussionTask" />	
	<beans:bean id="noActivityInTwoWeeksTask" class="com.dost.quartz.NoActivityInTwoWeeksTask" />	
	<beans:bean id="signupOnlyTask" class="com.dost.quartz.SignupOnlyTask" />	
	-->
	<!-- Scheduled Task Entries End -->
	
	<!-- Code segment for block user -->
	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:property name="sessionRegistry" ref="sessionRegistry" />
		<beans:property name="expiredUrl" value="/signupNow" />
	</beans:bean>
	
	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
	</beans:bean>
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />
		
</beans:beans>